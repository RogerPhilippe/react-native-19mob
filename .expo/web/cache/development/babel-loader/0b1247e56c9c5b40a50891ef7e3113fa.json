{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/rphilippe/DevEnv/Workspace/MBA/React-Native/react-native-19mob/screens/season/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { F1APIService } from \"../../services/F1APIService\";\n\nvar Season = function (_Component) {\n  _inherits(Season, _Component);\n\n  var _super = _createSuper(Season);\n\n  function Season() {\n    var _this;\n\n    _classCallCheck(this, Season);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      races: []\n    };\n    return _this;\n  }\n\n  _createClass(Season, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(this.props.route.params.year);\n      new F1APIService().getSeasonInfo().then(function (seasonInfo) {\n        return _this2.setState({\n          races: seasonInfo\n        });\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    }\n  }, {\n    key: \"renderRaces\",\n    value: function renderRaces() {\n      var races = this.state.races;\n      return races.map(function (_ref) {\n        var round = _ref.round,\n            url = _ref.url,\n            raceName = _ref.raceName,\n            date = _ref.date,\n            time = _ref.time;\n        return React.createElement(Text, {\n          key: round,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 9\n          }\n        }, \"Corrida: \", round, \" | Nome: \", raceName, \" | Data: \", date);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, this.renderRaces());\n    }\n  }]);\n\n  return Season;\n}(Component);\n\nexport default Season;","map":{"version":3,"sources":["/home/rphilippe/DevEnv/Workspace/MBA/React-Native/react-native-19mob/screens/season/index.js"],"names":["React","Component","F1APIService","Season","state","races","console","log","props","route","params","year","getSeasonInfo","then","seasonInfo","setState","catch","error","map","round","url","raceName","date","time","renderRaces"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,SAASC,YAAT;;IAEMC,M;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE;AADH,K;;;;;;wCAIY;AAAA;;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,IAApC;AACA,UAAIT,YAAJ,GAAmBU,aAAnB,GACCC,IADD,CACM,UAAAC,UAAU;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEV,UAAAA,KAAK,EAAES;AAAT,SAAd,CAAJ;AAAA,OADhB,EAECE,KAFD,CAEO,UAAAC,KAAK;AAAA,eAAIX,OAAO,CAACW,KAAR,CAAcA,KAAd,CAAJ;AAAA,OAFZ;AAGH;;;kCAEa;AAAA,UACFZ,KADE,GACQ,KAAKD,KADb,CACFC,KADE;AAGV,aAAOA,KAAK,CAACa,GAAN,CAAW;AAAA,YAAEC,KAAF,QAAEA,KAAF;AAAA,YAASC,GAAT,QAASA,GAAT;AAAA,YAAcC,QAAd,QAAcA,QAAd;AAAA,YAAwBC,IAAxB,QAAwBA,IAAxB;AAAA,YAA8BC,IAA9B,QAA8BA,IAA9B;AAAA,eAClB,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEJ,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA4BA,KAA5B,eAA4CE,QAA5C,eAA+DC,IAA/D,CADkB;AAAA,OAAX,CAAP;AAGH;;;6BAEQ;AACL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,KAAKE,WAAL,EADN,CADJ;AAKH;;;;EA3BgBvB,S;;AA8BrB,eAAeE,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Text, View } from 'react-native';\nimport { F1APIService } from '../../services/F1APIService';\n\nclass Season extends Component {\n\n    state = {\n        races: [],\n    }\n\n    componentDidMount() {\n        console.log(this.props.route.params.year)\n        new F1APIService().getSeasonInfo()\n        .then(seasonInfo => this.setState({ races: seasonInfo }) )\n        .catch(error => console.error(error) )\n    }\n\n    renderRaces() {\n        const { races } = this.state;\n\n        return races.map( ({round, url, raceName, date, time})  => (\n        <Text key={round}>Corrida: {round} | Nome: {raceName} | Data: {date}</Text>\n        ))\n    }\n\n    render() {\n        return(\n            <View>\n                { this.renderRaces() }\n            </View>\n        );\n    }\n}\n\nexport default Season;"]},"metadata":{},"sourceType":"module"}